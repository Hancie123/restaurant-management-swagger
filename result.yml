openapi: 3.0.0
info:
  title: Restaurant Management
  description: Restaurant Management API documentation
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://restro.knexperts.com/
    description: server
tags:
  - name: Admin
  - name: Admin > Customers
  - name: Admin > User
  - name: Admin > Product Category
  - name: Admin > Product Variation
  - name: Admin > Product
  - name: Admin > Table
  - name: Admin > Floor
  - name: Public
  - name: Public > Auth
paths:
  /admin/customers:
    post:
      tags:
        - Admin > Customers
      summary: create customer account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh@gmail.com
                phone:
                  type: integer
                  example: '9825915122'
                address:
                  type: string
                  example: KTM
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Customers
      summary: get all customers
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/customers/{slug}:
    post:
      tags:
        - Admin > Customers
      summary: update customer details
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Nitesh Hamal
                email:
                  type: string
                  example: nitesh@gmail.com
                phone:
                  type: integer
                  example: '9813371345'
                address:
                  type: string
                  example: KTM
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Customers
      summary: delete customer
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/users:
    post:
      tags:
        - Admin > User
      summary: create user account
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Hancie Phago
                email:
                  type: string
                  example: hancie@gmail.com
                password:
                  type: integer
                  example: '12345678'
                password_confirmation:
                  type: integer
                  example: '12345678'
                status:
                  type: string
                  example: Active
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-categories:
    post:
      tags:
        - Admin > Product Category
      summary: create product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category:
                  type: string
                  example: Foods
                description:
                  type: string
                  example: My momo
                category_image:
                  type: string
                  format: binary
                bar:
                  type: string
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Category
      summary: get all product category
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-categories/{slug}:
    delete:
      tags:
        - Admin > Product Category
      summary: delete product category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Category
      summary: get single product category
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Admin > Product Category
      summary: updated product category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                category_name:
                  type: string
                  example: Momo
                parent_category:
                  type: string
                  example: Drink
                category_image:
                  type: string
                  format: binary
                description:
                  type: string
                  example: My momo
                bar:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations:
    post:
      tags:
        - Admin > Product Variation
      summary: store product variation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Masala Tea
                description:
                  type: string
                  example: Masala Tea
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product Variation
      summary: get all product variation
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pagination_limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/product-variations/{product_id}:
    post:
      tags:
        - Admin > Product Variation
      summary: update product variation
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                variation_name:
                  type: string
                  example: Momo
                description:
                  type: string
                  example: Steamed Momo
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Product Variation
      summary: delete product variation
      parameters:
        - name: product_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products:
    post:
      tags:
        - Admin > Product
      summary: create product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: Momo
                category_id:
                  type: integer
                  example: '1'
                ingredient:
                  type: string
                  example: gffg
                description:
                  type: string
                  example: fgfgfg
                hasVariation:
                  type: integer
                  example: '1'
                variation_name[]:
                  type: string
                  example: rtrt
                price[]:
                  type: integer
                  example: '4545'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Product
      summary: get all product
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/momo-1:
    post:
      tags:
        - Admin > Product
      summary: update product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                  example: Momo
                category_id:
                  type: integer
                  example: '1'
                ingredient:
                  type: string
                  example: Rice
                description:
                  type: string
                  example: fgfgfg
                hasVariation:
                  type: integer
                  example: '1'
                variation_name[]:
                  type: string
                  example: Hancie
                price[]:
                  type: integer
                  example: '72'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/products/{slug}:
    delete:
      tags:
        - Admin > Product
      summary: delete product
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables:
    post:
      tags:
        - Admin > Table
      summary: create table
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T11
                description:
                  type: string
                  example: Table no t 11
                table_capacity:
                  type: integer
                  example: '3'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Admin > Table
      summary: get all table list
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tables/{id}:
    post:
      tags:
        - Admin > Table
      summary: update table data
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                table_number:
                  type: string
                  example: T10
                description:
                  type: string
                  example: Table no t 10
                table_capacity:
                  type: integer
                  example: '3'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Table
      summary: delete table
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors:
    post:
      tags:
        - Admin > Floor
      summary: create floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F2
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: integer
                  example: '2'
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/floors/{id}:
    post:
      tags:
        - Admin > Floor
      summary: update floor
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                floor_name:
                  type: string
                  example: F1
                description:
                  type: string
                  example: f1
                table_numbers[]:
                  type: integer
                  example: '11'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Admin > Floor
      summary: delete floor
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Public > Auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hanciephago@gmail.com
                password:
                  type: string
                  example: password
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
